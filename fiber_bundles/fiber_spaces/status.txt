

Status of "family-factory-dev-2" as of 04/12/09:
Bill Mason


1. We have added the "tensor_space_family" group to the
   fiber_bundles_namespace.

2. In fiber_spaces the fiber classes, currently, most have
   "new_host2" functions which return a "tensor_space_poset*".
   The ones which do not are the jcb and group classes.

   In all cases the original "new_host" functions which return
   "poset*" are still in place.  This is to allow the classes
   in section_space, fibers, tools, Shell_components, and PaleoFields
   to continue to compile.  Once section_spaces, etc. are converted to
   use only "new_host2", we will delete the old "new_host" functions
   and rename new_host2" to "new_host".

   The tensor space posets corresponding to a given vector space type
   are currently all created in the new_host2 functions for the vector
   space posets (eg: e2::new_host2 also creates t2_e2, at2_e2, st2_e2,
   etc. hosts.  Later for better efficiency and less cluttering of the
   namespace, we may want to create these hosts as needed.

3. There is currently a static function in tp to create tensor space
   names from the name of the associated vector space and the tensor
   type name (eg: "e2_location_t2_e2").  Dave has verbally outlined
   a more "standard" way to do this using functionality in the poset_path
   class.  This is another task which will have to be done later.

4. All of the previous fiber test cases (eg: e2.t) have been converted
   to use "new_host2" with the exception of the jcb and group test cases.

   The templated functions sym, alt, wedge, etc. for persistent types
   which return auto-allocated results are in place but are not fully
   tested in the current test cases.

5. The tensor_space_poset class which is currently in CVS is the version
   checked in by Dave on 04/10/09.  It is designed to fix some previous
   issues which were discovered in attempting to write namespaces
   containing tensor space familys to hdf files.

   There is still a problem with the currecnt version of tensor_space_poset
   In a very simple test involving getting a handle to an existing
   tensor_space_poset in the namespace we get a segmentation fault error
   (See test.t.cc).


6. In sections_spaces we have decided that the section_space_factory
   will have be modified to include the vector_space_path in much
   the same way that the base_path is handled now.  The logic
   in the "initialize_paths" function will have to account for the
   fact that the fiber_path will depend on the vector_space_path.

7. Changes to the fibers and to the section_space will necessitate
   corresponding changes in the field classes.
   We'll have to figure out how to handle the differences between
   the api of the jac/group classes (poset* new_host) and the
   other fiber classes (tensor_space_poset* new_host).

8. We need to add tensor_space_poset to the bindings.
