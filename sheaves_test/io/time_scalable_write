#! /bin/tcsh
#
#if($#argv == 0) then
#  echo "usage: time_scalable_write <index upper bnound>"
#  exit
#endif
#
#@ ub = $1
#@ i = 1
#
#while ($i <= $ub)
#  @ iblck = $ub / $i
#  @ j = 1
#  while ($j <= $i)
#    @ jblck = $ub / $j
#      echo timeing scalable_partial_write.t $i $j $iblck $jblck \: `time scalable_partial_write.t $i $j $iblck $jblck`   
#    @ j *= 2
#  end
#  @ i *= 2
#end
#

#echo "timeing scalable_partial_write.t 64 64  1  1 (4096 zones per block 1 block):" `scalable_partial_write.t 64 64 1 1`   
#echo "timeing scalable_partial_write.t 16 8   4  8 (128 zones per block 32 blocks):" `scalable_partial_write.t 16 8 4 8`   
#echo "timeing scalable_partial_write.t  8 8   8  8 (64 zones per block 64 blocks):" `scalable_partial_write.t 8 8 8 8`   
#echo "timeing scalable_partial_write.t  8 4  16  8 (32 zones per block 128 blocks):" `scalable_partial_write.t 8 4 16 8`   
#echo "timeing scalable_partial_write.t  4 4  16 16 (16 zones per block 256 blocks):" `scalable_partial_write.t 4 4 16 16`   
#echo "timeing scalable_partial_write.t  2 4  32 16 (8 zones per block 512 blocks):" `scalable_partial_write.t 2 4 32 16`   

scalable_partial_write.t 64 64 1 1
scalable_partial_write.t 16 8 4 8  
scalable_partial_write.t 8 8 8 8 
scalable_partial_write.t 8 4 16 8  
scalable_partial_write.t 4 4 16 16 
scalable_partial_write.t 2 4 32 16 
